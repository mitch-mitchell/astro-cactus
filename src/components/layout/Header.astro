---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { menuLinks } from "@/site.config";
import {siteConfig} from "../../site.config";
---

<header class="group relative mb-28 flex items-center sm:ps-18" id="main-header">
  <div class="flex sm:flex-col">
    <a
      aria-current={Astro.url.pathname === "/" ? "page" : false}
      class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
      href="/"
    >
      <svg
        aria-hidden="true"
        class="me-3 h-10 w-6 sm:absolute sm:-start-18 sm:me-0 sm:h-20 sm:w-12"
        fill="none"
        focusable="false"
        viewBox="0 0 272 480"
        xmlns="http://www.w3.org/2000/svg"
      >
        <title>Logo</title>
        <g transform="translate(0,0) scale(1)">
          <path d="M192.7 134.1c-11.5 4.5-20.5 13.4-25.1 24.7-5.5 13.7-2.6 29.2 7.3 39.9 4.5 4.8 10.5 8.4 15.5 13.1 4.7 4.5 8.4 9.7 12 15 4.3 6.2 8.4 12.6 12.7 18.7 2.4 3.2 7.3 9.9 9.4 12.6 7.8 10.2 17.1 19.3 25.9 28.6 10.3 10.7 20.5 21.4 30.9 31.9 5.3 5.3 10.9 10.4 15.8 16.1 1.3 1.5 2.5 3.1 3.7 4.7H19.7v5.3H254c4.4 5.3 8.3 10.7 11.6 16.4 4.5 7.5 7.9 15.7 10.4 24H0V0h272v100.7c-6.1 11.8-18.8 24.5-26.6 32.2-6.6-3.2-14.2-2.6-21 1.2-6.6 3.7-12.1 8.5-18.1 13z" fill="#000"/>
        </g>
      </svg>
      <span class="text-xl font-bold sm:text-2xl">{siteConfig.title}</span>
    </a>
    <nav
      aria-label="Main menu"
      class="bg-global-bg/85 text-accent sm:divide-accent absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md py-4 shadow backdrop-blur-sm group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
      id="navigation-menu"
    >
      {
        menuLinks.map((link) => (
          <a
            aria-current={Astro.url.pathname === link.path ? "page" : false}
            class="px-4 py-4 underline-offset-2 hover:underline sm:py-0"
            data-astro-prefetch
            href={link.path}
          >
            {link.title}
          </a>
        ))
      }
    </nav>
  </div>
  <Search />
  <ThemeToggle />
  <mobile-button>
    <button
      aria-expanded="false"
      aria-haspopup="menu"
      class="group relative ms-4 h-7 w-7 sm:invisible sm:hidden"
      id="toggle-navigation-menu"
      type="button"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        aria-hidden="true"
        class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
        fill="none"
        focusable="false"
        id="line-svg"
        stroke="currentColor"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M3.75 9h16.5m-16.5 6.75h16.5" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      <svg
        aria-hidden="true"
        class="text-accent absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
        fill="none"
        focusable="false"
        id="cross-svg"
        stroke="currentColor"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M6 18L18 6M6 6l12 12" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
  </mobile-button>
</header>

<script>
  import { toggleClass } from "@/utils/domElement";

  class MobileNavBtn extends HTMLElement {
    #menuOpen = false;

    connectedCallback() {
      const headerEl = document.getElementById("main-header");
      const mobileButtonEl = this.querySelector("button");

      mobileButtonEl?.addEventListener("click", () => {
        if (headerEl) toggleClass(headerEl, "menu-open");
        this.#menuOpen = !this.#menuOpen;
        mobileButtonEl.setAttribute("aria-expanded", this.#menuOpen.toString());
      });
    }
  }

  customElements.define("mobile-button", MobileNavBtn);
</script>
